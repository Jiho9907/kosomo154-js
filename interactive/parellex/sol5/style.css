*,
*:after,
*:before {
  box-sizing: border-box; /* 모든 요소와 가상 요소의 박스 크기를 테두리와 패딩을 포함하도록 설정하여, 요소의 크기를 계산할 때 테두리와 패딩을 포함시킵니다. */
}

html {
  color-scheme: light only; /* 문서의 색상 체계를 밝은 모드로 설정하여, 브라우저가 밝은 모드 색상 체계를 사용하도록 지시합니다. */
}

body {
  display: grid; /* 그리드 레이아웃을 사용하여 요소를 배치합니다. */
  place-items: center; /* 그리드 셀 내의 항목을 수직 및 수평으로 중앙에 배치합니다. */
  min-height: 100vh; /* 최소 높이를 뷰포트 높이의 100%로 설정하여, 화면 전체를 차지하도록 합니다. */
  font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
    Helvetica, Arial, sans-serif, system-ui; /* 폰트 패밀리를 설정하여, 다양한 폰트를 사용할 수 있도록 합니다. */
}

body::before {
  --size: 45px; /* 사용자 정의 속성으로 크기를 45px로 설정합니다. */
  --line: color-mix(in lch, canvasText, transparent 70%); /* 사용자 정의 속성으로 색상 혼합을 설정합니다. */
  /*
    in lch: 색상 혼합이 이루어질 색상 공간을 지정합니다. 여기서는 lch 색상 공간을 사용합니다. lch는 색상(Lightness), 색도(Chroma), 색상(Hue)을 기반으로 한 색상 공간입니다.
    canvasText: 혼합할 첫 번째 색상입니다. canvasText는 브라우저의 기본 텍스트 색상을 나타냅니다.
    transparent 70%: 혼합할 두 번째 색상입니다. 여기서는 투명색(transparent)을 70% 비율로 혼합합니다. 즉, 투명색이 70% 비율로 혼합되고 나머지 30%는 canvasText 색상이 됩니다.
  */
  content: ''; /* 가상 요소의 내용을 비워둡니다. */
  height: 100vh; /* 높이를 뷰포트 높이의 100%로 설정합니다. */
  width: 100vw; /* 너비를 뷰포트 너비의 100%로 설정합니다. */
  position: fixed; /* 고정 위치를 설정하여, 스크롤 시에도 요소가 고정되도록 합니다. */
  background: linear-gradient(
        90deg,
        var(--line) 1px,
        transparent 1px var(--size)
      )
      50% 50% / var(--size) var(--size),
    linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% /
      var(--size) var(--size); /* 배경에 선형 그라디언트를 설정하여, 격자 무늬 배경을 만듭니다. */
      /*
      첫 번째 linear-gradient:
        90deg: 그라디언트의 방향을 90도(수평)로 설정합니다.
        var(--line) 1px: --line 사용자 정의 속성을 사용하여 1px 너비의 선을 설정합니다.
        transparent 1px var(--size): 1px 너비의 투명한 부분을 설정하고, --size 사용자 정의 속성을 사용하여 그라디언트의 크기를 설정합니다.
        50% 50% / var(--size) var(--size): 그라디언트를 50% 50% 위치에 배치하고, --size 사용자 정의 속성을 사용하여 그라디언트의 크기를 설정합니다.
      두 번째 linear-gradient:
        var(--line) 1px: --line 사용자 정의 속성을 사용하여 1px 너비의 선을 설정합니다.
        transparent 1px var(--size): 1px 너비의 투명한 부분을 설정하고, --size 사용자 정의 속성을 사용하여 그라디언트의 크기를 설정합니다.
        50% 50% / var(--size) var(--size): 그라디언트를 50% 50% 위치에 배치하고, --size 사용자 정의 속성을 사용하여 그라디언트의 크기를 설정합니다.
      */
  mask: linear-gradient(-20deg, transparent 50%, white); /* 마스크를 설정하여, 배경의 일부를 투명하게 만듭니다. */
  /* 
    mask 속성: 요소의 내용이 마스크와 교차하는 부분만 보이도록 설정합니다. 마스크는 이미지, 그라디언트 또는 다른 요소일 수 있습니다.
    linear-gradient(-20deg, transparent 50%, white):
      linear-gradient: 선형 그라디언트를 생성합니다.
      -20deg: 그라디언트의 방향을 -20도로 설정합니다. 즉, 그라디언트가 -20도 각도로 기울어집니다.
      transparent 50%: 그라디언트의 중간 지점(50%)까지 투명색으로 설정합니다. 즉, 그라디언트의 절반은 투명합니다.
      white: 그라디언트의 나머지 절반을 흰색으로 설정합니다.
  */
  top: 0; /* 상단 위치를 0으로 설정합니다. */
  transform-style: flat; /* 변환 스타일을 평면으로 설정합니다. */
  pointer-events: none; /* 포인터 이벤트를 비활성화하여, 요소가 클릭되지 않도록 합니다. */
  z-index: -1; /* z-인덱스를 -1로 설정하여, 요소가 다른 요소 뒤에 배치되도록 합니다. */
}

.bear-link {
  color: white; /* 텍스트 색상을 흰색으로 설정합니다. */
  position: fixed; /* 고정 위치를 설정하여, 스크롤 시에도 요소가 고정되도록 합니다. */
  top: 1rem; /* 상단 여백을 1rem로 설정합니다. */
  left: 1rem; /* 왼쪽 여백을 1rem로 설정합니다. */
  width: 48px; /* 너비를 48px로 설정합니다. */
  aspect-ratio: 1; /* 가로 세로 비율을 1로 설정하여, 정사각형 모양을 만듭니다. */
  display: grid; /* 그리드 레이아웃을 사용하여 요소를 배치합니다. */
  place-items: center; /* 그리드 셀 내의 항목을 수직 및 수평으로 중앙에 배치합니다. */
  z-index: 1000; /* z-인덱스를 1000으로 설정하여, 요소가 다른 요소 위에 배치되도록 합니다. */
}

:where(.x-link, .bear-link):is(:hover, :focus-visible) {
  opacity: 1; /* 호버 또는 포커스 시 불투명도를 1로 설정하여, 요소가 완전히 보이도록 합니다. */
}

.bear-link svg {
  width: 75%; /* SVG 요소의 너비를 75%로 설정합니다. */
}

:root {
  --info-size: 35vh; /* 사용자 정의 속성으로 정보 크기를 뷰포트 높이의 35%로 설정합니다. */
}

body {
  display: grid; /* 그리드 레이아웃을 사용하여 요소를 배치합니다. */
  place-items: center; /* 그리드 셀 내의 항목을 수직 및 수평으로 중앙에 배치합니다. */
  min-height: 100vh; /* 최소 높이를 뷰포트 높이의 100%로 설정하여, 화면 전체를 차지하도록 합니다. */
  font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas,
    'DejaVu Sans Mono', monospace; /* 폰트 패밀리를 설정하여, 다양한 폰트를 사용할 수 있도록 합니다. */
  overflow: auto; /* 오버플로우를 자동으로 설정하여, 내용이 넘칠 경우 스크롤이 가능하도록 합니다. */
}

nav {
  position: sticky; /* 스티키 위치를 설정하여, 스크롤 시에도 요소가 고정되도록 합니다. */
  top: 0; /* 상단 위치를 0으로 설정합니다. */
  left: 0; /* 왼쪽 위치를 0으로 설정합니다. */
  width: 100%; /* 너비를 100%로 설정하여, 화면 전체 너비를 차지하도록 합니다. */
  height: 80px; /* 높이를 80px로 설정합니다. */
  text-align: left; /* 텍스트 정렬을 왼쪽으로 설정합니다. */
  font-weight: bold; /* 폰트 두께를 굵게 설정합니다. */
  font-size: 1.75rem; /* 폰트 크기를 1.75rem로 설정합니다. */
  display: flex; /* 플렉스 레이아웃을 사용하여 요소를 배치합니다. */
  align-items: center; /* 플렉스 항목을 수직으로 중앙에 정렬합니다. */
  background: canvasText; /* 배경색을 설정합니다. */
  color: canvas; /* 텍스트 색상을 설정합니다. */
  padding: 0 1rem; /* 패딩을 상하 0, 좌우 1rem로 설정합니다. */
  z-index: 3; /* z-인덱스를 3으로 설정하여, 요소가 다른 요소 위에 배치되도록 합니다. */
}

article {
  max-width: 100vw; /* 최대 너비를 뷰포트 너비의 100%로 설정합니다. */
  height: 100vh; /* 높이를 뷰포트 높이의 100%로 설정합니다. */
  display: grid; /* 그리드 레이아웃을 사용하여 요소를 배치합니다. */
  grid-template-rows: calc(100vh - var(--info-size)) var(--info-size); /* 그리드 행 템플릿을 설정하여, 상단과 하단의 높이를 조절합니다. */
  view-timeline: --article; /* 뷰 타임라인을 설정합니다. */
}

.article__img {
  position: sticky; /* 스티키 위치를 설정하여, 스크롤 시에도 요소가 고정되도록 합니다. */
  top: 0; /* 상단 위치를 0으로 설정합니다. */
  left: 0; /* 왼쪽 위치를 0으로 설정합니다. */
  right: 0; /* 오른쪽 위치를 0으로 설정합니다. */
  height: var(--info-size); /* 높이를 사용자 정의 속성으로 설정합니다. */
  animation: in-n-out both linear; /* 애니메이션을 설정하여, 요소가 나타나고 사라지도록 합니다. */
  animation-timeline: --article; /* 애니메이션 타임라인을 설정합니다. */
}

h2 {
  text-transform: uppercase; /* 텍스트를 대문자로 변환합니다. */
  font-size: 2rem; /* 폰트 크기를 2rem로 설정합니다. */
  margin: 0; /* 마진을 0으로 설정합니다. */
}

article img {
    object-fit: cover; /* 이미지 객체 맞춤을 설정하여, 이미지가 요소를 완전히 덮도록 합니다. */
    width: 100%; /* 너비를 100%로 설정합니다. */
    height: 100%; /* 높이를 100%로 설정합니다. */
    height: calc(100vh - var(--info-size)); /* 높이를 계산하여 설정합니다. */
    animation: filter-out both linear; /* 애니메이션을 설정하여, 이미지가 밝아지도록 합니다. */
    animation-timeline: --article; /* 애니메이션 타임라인을 설정합니다. */
    animation-range: exit 0% cover 100%; /* 애니메이션 범위를 설정하여, 이미지가 사라질 때까지 애니메이션이 적용되도록 합니다. */
  }
  
  @keyframes filter-out {
    100% {
      filter: brightness(2); /* 밝기 필터를 설정하여, 이미지가 밝아지도록 합니다. */
      translate: 0 -60%; /* 이미지를 수직으로 -60% 이동시킵니다. */
    }
  }
  
  @keyframes in-n-out {
    0%,
    100% {
      opacity: 0; /* 불투명도를 0으로 설정하여, 요소가 보이지 않도록 합니다. */
    }
    10%,
    60% {
      opacity: 1; /* 불투명도를 1로 설정하여, 요소가 보이도록 합니다. */
    }
  }
  
  .article__info {
    text-align: center; /* 텍스트 정렬을 중앙으로 설정합니다. */
    z-index: 2; /* z-인덱스를 2로 설정하여, 요소가 다른 요소 위에 배치되도록 합니다. */
    display: grid; /* 그리드 레이아웃을 사용하여 요소를 배치합니다. */
    place-items: center; /* 그리드 셀 내의 항목을 수직 및 수평으로 중앙에 배치합니다. */
    align-content: center; /* 콘텐츠 정렬을 중앙으로 설정합니다. */
    gap: 0.5rem; /* 그리드 간격을 0.5rem로 설정합니다. */
    height: var(--info-size); /* 높이를 사용자 정의 속성으로 설정합니다. */
  }
  
  main {
    width: 100%; /* 너비를 100%로 설정하여, 화면 전체 너비를 차지하도록 합니다. */
  }
  
  a:not(.bear-link) {
    text-transform: uppercase; /* 텍스트를 대문자로 변환합니다. */
    font-weight: 600; /* 폰트 두께를 600으로 설정합니다. */
    color: hsl(0 0% 98%); /* 텍스트 색상을 HSL 색상 모델을 사용하여 설정합니다. */
    background: hsl(0 0% 0%); /* 배경색을 HSL 색상 모델을 사용하여 설정합니다. */
    padding: 1rem 2rem; /* 패딩을 상하 1rem, 좌우 2rem로 설정합니다. */
    text-decoration: none; /* 텍스트 장식을 제거합니다. */
    word-spacing: 0.2rem; /* 단어 간격을 0.2rem로 설정합니다. */
    font-size: 1.25rem; /* 폰트 크기를 1.25rem로 설정합니다. */
    border-radius: 4px; /* 테두리 반경을 4px로 설정하여, 모서리를 둥글게 만듭니다. */
    transition: background 0.1s; /* 배경색 전환을 0.1초로 설정합니다. */
  }
  
  a.bear-link {
    text-decoration: none; /* 텍스트 장식을 제거합니다. */
  }
  
  a:hover {
    background: hsl(0 0% 40%); /* 호버 시 배경색을 HSL 색상 모델을 사용하여 설정합니다. */
  }
  
  .article__info {
    background: canvas; /* 배경색을 캔버스로 설정합니다. */
  }
  
  @media (min-width: 768px) {
    article {
      width: 100%; /* 너비를 100%로 설정하여, 화면 전체 너비를 차지하도록 합니다. */
      display: grid; /* 그리드 레이아웃을 사용하여 요소를 배치합니다. */
      place-items: start; /* 그리드 셀 내의 항목을 시작 위치에 배치합니다. */
      z-index: calc(var(--count, 10) - var(--index, 0)); /* z-인덱스를 계산하여 설정합니다. */
      position: relative; /* 상대 위치를 설정합니다. */
      grid-template-rows: unset; /* 그리드 행 템플릿을 초기화합니다. */
    }
    nav {
      position: fixed; /* 고정 위치를 설정하여, 스크롤 시에도 요소가 고정되도록 합니다. */
      top: 0; /* 상단 위치를 0으로 설정합니다. */
      z-index: 100; /* z-인덱스를 100으로 설정하여, 요소가 다른 요소 위에 배치되도록 합니다. */
    }
    .article__info {
      background: transparent; /* 배경색을 투명으로 설정합니다. */
      height: 100vh; /* 높이를 뷰포트 높이의 100%로 설정합니다. */
      width: 40%; /* 너비를 40%로 설정합니다. */
      display: grid; /* 그리드 레이아웃을 사용하여 요소를 배치합니다. */
      place-items: center; /* 그리드 셀 내의 항목을 수직 및 수평으로 중앙에 배치합니다. */
      padding: 1rem; /* 패딩을 1rem로 설정합니다. */
      gap: 1rem; /* 그리드 간격을 1rem로 설정합니다. */
      align-content: center; /* 콘텐츠 정렬을 중앙으로 설정합니다. */
    }
    .article__img {
      position: fixed; /* 고정 위치를 설정하여, 스크롤 시에도 요소가 고정되도록 합니다. */
      top: 0; /* 상단 위치를 0으로 설정합니다. */
      right: 0; /* 오른쪽 위치를 0으로 설정합니다. */
      left: 40%; /* 왼쪽 위치를 40%로 설정합니다. */
      bottom: 0; /* 하단 위치를 0으로 설정합니다. */
      height: 100vh; /* 높이를 뷰포트 높이의 100%로 설정합니다. */
      animation: none; /* 애니메이션을 제거합니다. */
    }
    .article__img {
      animation: brighten both linear; /* 애니메이션을 설정하여, 이미지가 밝아지도록 합니다. */
      animation-timeline: --article; /* 애니메이션 타임라인을 설정합니다. */
      animation-range: entry 0% entry 50%; /* 애니메이션 범위를 설정하여, 이미지가 나타날 때까지 애니메이션이 적용되도록 합니다. */
    }
    .article__img img {
      animation: clip-out both linear; /* 애니메이션을 설정하여, 이미지가 클립되도록 합니다. */
      animation-timeline: --article; /* 애니메이션 타임라인을 설정합니다. */
      animation-range: exit 0% exit 100%; /* 애니메이션 범위를 설정하여, 이미지가 사라질 때까지 애니메이션이 적용되도록 합니다. */
      height: 100%; /* 높이를 100%로 설정합니다. */
    }
  }
  
  @keyframes brighten {
    0% {
      filter: brightness(2); /* 밝기 필터를 설정하여, 이미지가 밝아지도록 합니다. */
    }
    100% {
      filter: brightness(1); /* 밝기 필터를 설정하여, 이미지가 원래 밝기로 돌아오도록 합니다. */
    }
  }
  
  @keyframes clip-out {
    0% {
      clip-path: inset(0 0 0 0); /* 클립 경로를 설정하여, 이미지가 완전히 보이도록 합니다. */
    }
    100% {
      filter: brightness(0.5); /* 밝기 필터를 설정하여, 이미지가 어두워지도록 합니다. */
      clip-path: inset(100% 0 0 0); /* 클립 경로를 설정하여, 이미지가 사라지도록 합니다. */
    }
  }
  